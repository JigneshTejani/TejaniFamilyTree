{"version":3,"sources":["tree/index.js","tree/useCentered.js","helper/function.js","App.js","index.js"],"names":["prefix","process","NODE_ENV","OrgChartTree","dimensions","translate","containerRef","useCenteredTree","familyTree","stratify","id","d","name","parentId","father","getConvertedTreeData","React","Fragment","style","width","height","ref","Tree","orientation","allowForeignObjects","scaleExtent","max","min","separation","siblings","nonSiblings","nodeSize","x","y","renderCustomNodeElement","treeData","RenderCard","data","initialDepth","enableLegacyTransitions","memo","_ref","nodeDatum","toggleNode","foreignObjectProps","open","setOpen","useState","name_guj","split","spouse","spouse_guj","number","className","onClick","src","onError","e","target","length","position","top","left","backgroundColor","type","onPaste","clipboardData","items","undefined","i","indexOf","preventDefault","files","getAsFile","FormData","append","axios","post","then","res","console","log","autoFocus","photo","href","spouse_photo","defaultTranslate","setTranslate","setDimensions","useCallback","containerElem","getBoundingClientRect","dataKey","newTree","push","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.dbf75ede.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Tree from 'react-d3-tree';\nimport {useCenteredTree} from \"./useCentered\";\nimport {stratify} from 'd3-hierarchy';\nimport {getConvertedTreeData} from \"../helper/function\";\nimport axios from 'axios';\n\nconst prefix = process?.env?.NODE_ENV === 'development' ? 'TejaniFamilyTree/' : ''\n\nexport default function OrgChartTree() {\n    const [dimensions, translate, containerRef] = useCenteredTree();\n    const familyTree = stratify().id((d) => d.name).parentId((d) => d.father)(getConvertedTreeData());\n\n    return (<React.Fragment>\n        <div id=\"treeWrapper\" style={{width: '100vw', height: '100vh'}} ref={containerRef}>\n            <Tree\n                // pathFunc=\"step\"\n                orientation=\"vertical\"\n                allowForeignObjects={true}\n                translate={translate}\n                dimensions={dimensions} //control the size of the tree layout\n                scaleExtent={{max: 10, min: 0.3}}\n                separation={{siblings: 1, nonSiblings: 1.60}}\n                nodeSize={{x: 160, y: 300}}\n                renderCustomNodeElement={(treeData) => <RenderCard data={{...treeData}}/>}\n                initialDepth={1} // for visible first one row in tree\n                data={familyTree}\n                enableLegacyTransitions\n            />\n        </div>\n    </React.Fragment>);\n}\n\nconst RenderCard = React.memo(({data: {nodeDatum, toggleNode, foreignObjectProps = {}}}) => {\n    const [open, setOpen] = useState(\"\")\n    const data = nodeDatum?.data\n\n    const name = data?.name_guj?.split(\" \")?.[0]\n    const spouse = data?.spouse_guj?.split(\" \")?.[0]\n    const number = data?.number\n    const onPaste = (e) => {\n        if (e.clipboardData === false) return false;\n        const items = e.clipboardData.items;\n        if (items === undefined) return false;\n\n        for (let i = 0; i < items.length; i++) {\n            // Skip content if not image\n            if (items[i].type.indexOf('image') === -1) continue;\n            if (e && e.preventDefault) e.preventDefault();\n            // Retrieve image on clipboard as blob\n            const files = items[i].getAsFile();\n            const data = new FormData()\n            data.append('file', files)\n            data.append('name', open)\n\n            axios.post('http://localhost:8080/upload', data).then(res => {\n                console.log({res})\n                setOpen('')\n            })\n        }\n        return false;\n    }\n\n    return (<React.Fragment>\n        <foreignObject\n            {...foreignObjectProps}\n            width=\"160\"\n            height=\"300\"\n            x=\"-80\"\n            y=\"-100\"\n        >\n            {data?.name && <div className=\"card-container\" onClick={toggleNode}>\n                {data.name === \"tejaniparivar tejaniparivar\" ? <div className=\"root-card\">\n                        <p>{data?.name_guj}</p>\n                    </div>\n                    :\n                    <div className=\"card\">\n                        <div className=\"user\">\n                            <div className='user-avatar'>\n                                <img\n                                    src={`./${prefix}images/${data?.name}.png` ?? `./${prefix}male.png`}\n\n                                    onError={e => e.target.src = `./${prefix}male.png`}\n                                />\n                                {process.env.NODE_ENV === 'development' && <button onClick={e => {\n                                    e?.preventDefault()\n                                    e?.stopPropagation()\n                                    setOpen(data?.name)\n                                }}>name\n                                </button>}\n                                <p>{name}</p>\n                            </div>\n\n                            {spouse && <div className='user-avatar'>\n                                <img\n                                    src={`./${prefix}images/${data?.spouse}.png` ?? `./${prefix}female.png`}\n                                    onError={e => e.target.src = `./${prefix}female.png`}\n                                />\n                                {process.env.NODE_ENV === 'development' && <button onClick={e => {\n                                    e?.preventDefault()\n                                    e?.stopPropagation()\n                                    setOpen(data?.spouse)\n                                }}>spouse\n                                </button>}\n                                <p>{spouse}</p>\n                            </div>}\n                        </div>\n                        {number && <div className=\"contact\"><p>{number}</p></div>}\n                    </div>\n                }\n                {!!open?.length && <div style={{position: 'absolute', top: 0, left: '36px', height: '120px', width: '160px', backgroundColor: \"white\"}}>\n                    <button onClick={() => setOpen(\"\")}>Close</button>\n                    <input type=\"text\" onPaste={onPaste} autoFocus={true}/>\n                    {data?.photo && <a href={data?.photo} target=\"_blank\">name</a>} <br/>\n                    {data?.spouse_photo && <a href={data?.spouse_photo} target=\"_blank\">spouse</a>}\n                    <p>{open}</p>\n                </div>}\n            </div>}\n        </foreignObject>\n    </React.Fragment>);\n});\n","import { useCallback, useState } from \"react\";\n\nexport const useCenteredTree = (defaultTranslate = { x: 0, y: 0 }) => {\n    const [translate, setTranslate] = useState(defaultTranslate);\n    const [dimensions, setDimensions] = useState();\n    const containerRef = useCallback((containerElem) => {\n        if (containerElem !== null) {\n            const { width, height } = containerElem.getBoundingClientRect();\n            setDimensions({ width, height });\n            setTranslate({ x: width / 2, y: height / 2 });\n        }\n    }, []);\n    return [dimensions, translate, containerRef];\n};","import newTree from './../tree/newTree.json';\n\nexport const getJsonFromUniqueArray = () => {\n    const a = [{\"1\":\"Diyal\"},{\"2\":\"Devshi\",\"8\":\"Kadviebn\"},{\"3\":\"Shamji\",\"8\":\"Ratanben\"},{\"4\":\"Dungarshi\",\"8\":\"Shardaben\"},{\"5\":\"Bharat\"},{\"6\":\"Parth\"},{\"6\":\"Hari\"},{\"5\":\"Dharmesh\",\"8\":\"Margiben\"},{\"4\":\"Ganesh\",\"8\":\"Kailashben\"},{\"5\":\"Vasant\",\"8\":\"Dakshaben\"},{\"4\":\"Dinesh\",\"8\":\"Hiraben\"},{\"5\":\"Tilak\"},{\"4\":\"Mukesh\",\"8\":\"Parulben\"},{\"5\":\"Tejas\"},{\"3\":\"Parshotam\",\"8\":\"Maniben\"},{\"4\":\"Savji\",\"8\":\"Prabhaben\"},{\"5\":\"Hiren\",\"8\":\"Bhumiben\"},{\"6\":\"Vrunda\"},{\"6\":\"Dhyan\"},{\"5\":\"Kiran\",\"8\":\"Kinjalben\"},{\"6\":\"Dhyey\"},{\"6\":\"Mahir\"},{\"4\":\"Premji\",\"8\":\"Vasantben\"},{\"5\":\"Rajesh\",\"8\":\"Sangitaben\"},{\"6\":\"Vraj\"},{\"6\":\"Dhruv\"},{\"5\":\"Alpesh\",\"8\":\"Shilpaben\"},{\"6\":\"Jal\"},{\"2\":\"Hari\",\"8\":\"Dholiben\"},{\"3\":\"Megha\"},{\"4\":\"Jivraj\",\"8\":\"Nanduben\"},{\"5\":\"Babu\",\"8\":\"Vimlaben\"},{\"6\":\"Jayesh\",\"8\":\"Alpaben\"},{\"7\":\"Janvi\"},{\"7\":\"Jyot\"},{\"6\":\"Gautam\",\"8\":\"Dayaben\"},{\"7\":\"Jiyansh\"},{\"5\":\"Dhanji\",\"8\":\"Rekhaben\"},{\"6\":\"Shyam\"},{\"5\":\"Ishvar\",\"8\":\"Varshaben\"},{\"6\":\"Kishan\"},{\"6\":\"Mit\"},{\"3\":\"Madha\",\"8\":\"Javalben\"},{\"4\":\"Ranchhod\",\"8\":\"Champaben\"},{\"5\":\"Daya\",\"8\":\"Varshaben\"},{\"6\":\"Jay\"},{\"5\":\"Satish\",\"8\":\"Sonalben\"},{\"6\":\"Het\"},{\"6\":\"Ved\"},{\"2\":\"Dipa\"}]\n    const data = []\n    for (let i = 0; i < a?.length; i++) {\n        const getKey = (obj) => Object.keys(obj)?.[0] ? Number(Object.keys(obj)?.[0]) : -1\n        const child = a[i] ?? null\n        let cKey = getKey(child);\n\n        const findFather = (fatherIndex) => {\n            if (i < 1) return 'tejaniparivar'\n            if (cKey <= 1) return 'tejaniparivar'\n            if (fatherIndex === 2 && cKey <= 2) return 'tejaniparivar'\n            let pIndex = i - (fatherIndex - 1)\n            if (pIndex > -1) {\n                for (let j = i; j >= 0; j--) {\n                    const pFind = getKey(a[j])\n                    if (pFind === (cKey - fatherIndex)) {\n                        pIndex = j\n                        break\n                    }\n                }\n                return a[pIndex]?.[getKey(a[pIndex])] ?? ''\n            }\n        }\n\n        data.push(`${child[cKey]} ${findFather(1)}, ${findFather(1)} ${findFather(2)}`)\n    }\n    return data\n}\n\nexport const getConvertedTreeData = () => {\n    const data = [{name: \"tejaniparivar tejaniparivar\", name_guj: \"તેજાણી પરિવાર\"}]\n    for (const dataKey in newTree) {\n        data.push(...newTree[dataKey])\n    }\n    return data\n}\n","import React from \"react\";\nimport './App.css';\nimport OrgChartTree from \"./tree\";\n// import {getJsonFromUniqueArray} from \"./helper/function\";\n\n// console.log('Converted Array ====>>', getJsonFromUniqueArray())\nfunction App() {\n\n    return (\n        <div className=\"App\">\n\n            <OrgChartTree/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}